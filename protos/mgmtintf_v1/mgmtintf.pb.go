// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/mgmtintf_v1/mgmtintf.proto

/*
Package mgmtintf_v1 is a generated protocol buffer package.

It is generated from these files:
	protos/mgmtintf_v1/mgmtintf.proto

It has these top-level messages:
	Response
	WorkloadInfo
*/
package mgmtintf_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_rpc "google.golang.org/genproto/googleapis/rpc/status"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	Status *google_rpc.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Response) GetStatus() *google_rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type WorkloadInfo struct {
	Attrs *WorkloadInfo_WorkloadAttributes `protobuf:"bytes,1,opt,name=attrs" json:"attrs,omitempty"`
	// workloadpath is where the Flexvolume driver has created the volume specific for
	// the workload. The node agent will use this directory for this workload.
	Workloadpath string `protobuf:"bytes,2,opt,name=workloadpath" json:"workloadpath,omitempty"`
}

func (m *WorkloadInfo) Reset()                    { *m = WorkloadInfo{} }
func (m *WorkloadInfo) String() string            { return proto.CompactTextString(m) }
func (*WorkloadInfo) ProtoMessage()               {}
func (*WorkloadInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WorkloadInfo) GetAttrs() *WorkloadInfo_WorkloadAttributes {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *WorkloadInfo) GetWorkloadpath() string {
	if m != nil {
		return m.Workloadpath
	}
	return ""
}

type WorkloadInfo_WorkloadAttributes struct {
	// uid: Unique Id of the Workload.
	// During delete the uid is mandatory others are optional
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// workload identifier aka name.
	Workload string `protobuf:"bytes,2,opt,name=workload" json:"workload,omitempty"`
	// namespace of the workload.
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	// service account of the workload.
	Serviceaccount string `protobuf:"bytes,4,opt,name=serviceaccount" json:"serviceaccount,omitempty"`
}

func (m *WorkloadInfo_WorkloadAttributes) Reset()         { *m = WorkloadInfo_WorkloadAttributes{} }
func (m *WorkloadInfo_WorkloadAttributes) String() string { return proto.CompactTextString(m) }
func (*WorkloadInfo_WorkloadAttributes) ProtoMessage()    {}
func (*WorkloadInfo_WorkloadAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *WorkloadInfo_WorkloadAttributes) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *WorkloadInfo_WorkloadAttributes) GetWorkload() string {
	if m != nil {
		return m.Workload
	}
	return ""
}

func (m *WorkloadInfo_WorkloadAttributes) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkloadInfo_WorkloadAttributes) GetServiceaccount() string {
	if m != nil {
		return m.Serviceaccount
	}
	return ""
}

func init() {
	proto.RegisterType((*Response)(nil), "mgmtintf.v1.Response")
	proto.RegisterType((*WorkloadInfo)(nil), "mgmtintf.v1.WorkloadInfo")
	proto.RegisterType((*WorkloadInfo_WorkloadAttributes)(nil), "mgmtintf.v1.WorkloadInfo.WorkloadAttributes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeAgentMgmt service

type NodeAgentMgmtClient interface {
	WorkloadAdded(ctx context.Context, in *WorkloadInfo, opts ...grpc.CallOption) (*Response, error)
	WorkloadDeleted(ctx context.Context, in *WorkloadInfo, opts ...grpc.CallOption) (*Response, error)
}

type nodeAgentMgmtClient struct {
	cc *grpc.ClientConn
}

func NewNodeAgentMgmtClient(cc *grpc.ClientConn) NodeAgentMgmtClient {
	return &nodeAgentMgmtClient{cc}
}

func (c *nodeAgentMgmtClient) WorkloadAdded(ctx context.Context, in *WorkloadInfo, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/mgmtintf.v1.NodeAgentMgmt/WorkloadAdded", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentMgmtClient) WorkloadDeleted(ctx context.Context, in *WorkloadInfo, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/mgmtintf.v1.NodeAgentMgmt/WorkloadDeleted", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeAgentMgmt service

type NodeAgentMgmtServer interface {
	WorkloadAdded(context.Context, *WorkloadInfo) (*Response, error)
	WorkloadDeleted(context.Context, *WorkloadInfo) (*Response, error)
}

func RegisterNodeAgentMgmtServer(s *grpc.Server, srv NodeAgentMgmtServer) {
	s.RegisterService(&_NodeAgentMgmt_serviceDesc, srv)
}

func _NodeAgentMgmt_WorkloadAdded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentMgmtServer).WorkloadAdded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mgmtintf.v1.NodeAgentMgmt/WorkloadAdded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentMgmtServer).WorkloadAdded(ctx, req.(*WorkloadInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgentMgmt_WorkloadDeleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentMgmtServer).WorkloadDeleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mgmtintf.v1.NodeAgentMgmt/WorkloadDeleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentMgmtServer).WorkloadDeleted(ctx, req.(*WorkloadInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeAgentMgmt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mgmtintf.v1.NodeAgentMgmt",
	HandlerType: (*NodeAgentMgmtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WorkloadAdded",
			Handler:    _NodeAgentMgmt_WorkloadAdded_Handler,
		},
		{
			MethodName: "WorkloadDeleted",
			Handler:    _NodeAgentMgmt_WorkloadDeleted_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/mgmtintf_v1/mgmtintf.proto",
}

func init() { proto.RegisterFile("protos/mgmtintf_v1/mgmtintf.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0x53, 0xf8, 0xff, 0x09, 0x0c, 0xa0, 0x66, 0x12, 0x63, 0x6d, 0x3c, 0x20, 0x07, 0x43,
	0x8c, 0x29, 0x01, 0x13, 0xef, 0xa8, 0x17, 0x0f, 0x7a, 0xa8, 0x07, 0x8f, 0x66, 0x69, 0x87, 0xda,
	0x48, 0xbb, 0x9b, 0xdd, 0x29, 0x9e, 0xbd, 0xf9, 0x0d, 0xfc, 0xba, 0xc6, 0x2d, 0x5d, 0x41, 0xe3,
	0xc5, 0xdb, 0xcc, 0xfc, 0xde, 0x7b, 0xb3, 0xd9, 0x81, 0x63, 0xa5, 0x25, 0x4b, 0x33, 0xce, 0xd3,
	0x9c, 0xb3, 0x82, 0x17, 0x8f, 0xab, 0x89, 0xab, 0x43, 0xcb, 0xb0, 0xeb, 0xfa, 0xd5, 0x24, 0x38,
	0x48, 0xa5, 0x4c, 0x97, 0x34, 0xd6, 0x2a, 0x1e, 0x1b, 0x16, 0x5c, 0x9a, 0x4a, 0x35, 0xbc, 0x80,
	0x76, 0x44, 0x46, 0xc9, 0xc2, 0x10, 0x9e, 0x42, 0xab, 0x62, 0xbe, 0x37, 0xf0, 0x46, 0xdd, 0x29,
	0x86, 0x95, 0x2b, 0xd4, 0x2a, 0x0e, 0xef, 0x2d, 0x89, 0xd6, 0x8a, 0xe1, 0x6b, 0x03, 0x7a, 0x0f,
	0x52, 0x3f, 0x2f, 0xa5, 0x48, 0x6e, 0x8a, 0x85, 0xc4, 0x4b, 0xf8, 0x2f, 0x98, 0x75, 0xed, 0x3d,
	0x0b, 0x37, 0xd6, 0x87, 0x9b, 0x4a, 0xd7, 0xcc, 0x98, 0x75, 0x36, 0x2f, 0x99, 0x4c, 0x54, 0x59,
	0x71, 0x08, 0xbd, 0x97, 0x35, 0x54, 0x82, 0x9f, 0xfc, 0xc6, 0xc0, 0x1b, 0x75, 0xa2, 0xad, 0x59,
	0xf0, 0xe6, 0x01, 0xfe, 0x4c, 0xc0, 0x3d, 0x68, 0x96, 0x59, 0x62, 0x97, 0x77, 0xa2, 0xcf, 0x12,
	0x03, 0x68, 0xd7, 0xc6, 0x75, 0x90, 0xeb, 0xf1, 0x08, 0x3a, 0x85, 0xc8, 0xc9, 0x28, 0x11, 0x93,
	0xdf, 0xb4, 0xf0, 0x6b, 0x80, 0x27, 0xb0, 0x63, 0x48, 0xaf, 0xb2, 0x98, 0x44, 0x1c, 0xcb, 0xb2,
	0x60, 0xff, 0x9f, 0x95, 0x7c, 0x9b, 0x4e, 0xdf, 0x3d, 0xe8, 0xdf, 0xc9, 0x84, 0x66, 0x29, 0x15,
	0x7c, 0x9b, 0xe6, 0x8c, 0x33, 0xe8, 0xbb, 0xb7, 0x25, 0x09, 0x25, 0x78, 0xf8, 0xeb, 0x37, 0x04,
	0xfb, 0x5b, 0xc8, 0x1d, 0xe1, 0x0a, 0x76, 0x6b, 0xd9, 0x35, 0x2d, 0x89, 0xff, 0x12, 0x32, 0x6f,
	0xd9, 0xe3, 0x9e, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x05, 0xd9, 0x52, 0xb4, 0x27, 0x02, 0x00,
	0x00,
}
