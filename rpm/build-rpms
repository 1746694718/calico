#!/usr/bin/env bash

set -x
set -e

if [ -z "${EL_VERSION}" ]; then
  echo "EL_VERSION variable should be set"
  exit 1
fi

repo=`pwd`
pkg=`basename $repo`

if [ ${pkg} = networking-calico ]; then
    # networking-calico uses an OpenStack thing called PBR (Python
    # Build Reasonableness), which is responsible among other things
    # for automatically computing the Python package-level version.
    # It does this from the Git context (tags etc.), or from an
    # environment variable PBR_VERSION if Git context is not
    # available.  We have Git context here, but will remove that (with
    # --exclude-vcs) from the source tarball that we pass to rpmbuild,
    # so we calculate PBR_VERSION now and then add that to the
    # environment for rpmbuild.
    export PBR_VERSION=`python - <<'EOF'
import pbr.version
print pbr.version.VersionInfo('networking-calico').release_string()
EOF`
fi

mkdir -p /tmp/rpmbuild/BUILD \
         /tmp/rpmbuild/RPMS \
         /tmp/rpmbuild/SOURCES \
         /tmp/rpmbuild/SPECS\
         /tmp/rpmbuild/SRPMS

# Copy the package spec into SPECS.
spec=`basename ${repo}/rpm/*.spec`
cp -a ${repo}/rpm/$spec /tmp/rpmbuild/SPECS/

# Link patches into ../SOURCES.
cd /tmp/rpmbuild/SOURCES
for f in ${repo}/rpm/*; do ln -sf $f; done

# Infer the version that the spec wants to build.
version=`grep Version: $spec | head -1 | awk '{print $2;}'`

case ${pkg} in
    felix | networking-calico | dnsmasq )
	# Tar up the Git source, with the naming that rpmbuild expects.
	dir=${pkg}-${version}
	cp -a ${repo} /tmp/$dir
	tar -C /tmp --exclude-vcs -czf /tmp/rpmbuild/SOURCES/${dir}.tar.gz $dir
	;;
    etcd3gw)
	t=`mktemp -d -t etcd3gw.XXXXXX`
	curl -L https://github.com/dims/etcd3-gateway/archive/19abd85b710682b326702e2290a30d084fb0af71.zip -o $t/${pkg}-${version}.zip
	pushd $t
	unzip ${pkg}-${version}.zip
	mv etcd3-gateway-19abd85b710682b326702e2290a30d084fb0af71 ${pkg}-${version}
	tar zcf /tmp/rpmbuild/SOURCES/${pkg}-${version}.tar.gz ${pkg}-${version}
	popd
	export PBR_VERSION=${version}
	;;
esac

# Build, and fix centos7 putting always '.centos7' in the rpm-name
cd /tmp/rpmbuild
rpmbuild --target=$(uname -m) --define '_topdir '`pwd` --define "dist .${EL_VERSION}" -ba SPECS/${spec}
mkdir -p /code/dist/rpms-${EL_VERSION}/src
cp -r /tmp/rpmbuild/RPMS/* /code/dist/rpms-${EL_VERSION}/
cp -r /tmp/rpmbuild/SRPMS/* /code/dist/rpms-${EL_VERSION}/src/
